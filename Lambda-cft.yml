Resources:

  createlambdafun1url:
    Type: AWS::Lambda::Url
    Properties: 
      AuthType: NONE
      Cors:
        AllowOrigins:
          - '*'
        AllowCredentials: false
        AllowMethods: 
          - GET
          - POST
      TargetFunctionArn: !GetAtt balafn1lambda.Arn

  lambdafun1resourceperm:
    Type: AWS::Lambda::Permission
    Properties: 
      Action: lambda:InvokeFunctionUrl
      FunctionName: !GetAtt balafn1lambda.Arn
      Principal: arn:aws:iam::*:user/bala

  lambdafn1role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: Lambdafnrole-poc2
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess

  balafn1lambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: balapoc2
      Role: !GetAtt lambdafn1role.Arn
      Runtime: python3.7
      Handler: index.my_handler
      Code:
        ZipFile: |
          def my_handler(event, context):
            message = 'Hello Lambda World!'
            return message

